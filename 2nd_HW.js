//Чему равно а, почему?

//1
let a = 0 || 'string';
console.log(a);
//Ответ "string"

/*Возвращает первый операнд, если он может быть преобразован в true; в противном случае возвращает второй операнд. Таким образом, при использовании булевых величин в качестве операндов, оператор || возвращает true, если один из операндов true; если же оба false, то возвращает false. В нашем случае 0 возвращает false, 'string' не пустая строка, поэтому возвращает  true, поэтому получаем в ответе "string". */


//2
let a = 1 && 'string';
console.log(a);
//Ответ "string"

/*Возвращает первое значение, если оно может быть преобразовано в false; иначе возвращает второе значение. Таким образом, при использовании с величинами типа Boolean оператор && вернет true, если оба операнда могут быть преобразованы в true; иначе оператор && вернет false. И 1 и 'string' возвращают true, но первое значение 1 не преобразуется в false, поэтому 1 будет проигнорирован и в в ответе получим второе значение"string" */

//3
let a = null || 25;
console.log(a);
//Ответ 25

/*Как и в первом примере null может быть преобразован в false, поэтому возвращает в ответе второе значение 25, которое может быть преобразовано в true.*/

//4
let a = null && 25;
console.log(a);
//Ответ null

/*Возвращает значение, которое может быть преобразовано в false. Так как выражение null && 25 идентично false && true, условие что оба выражения возвращают true не выполняется и первый аргумент - false, Он и возвращается, а второй аргумент игнорируется.*/

//5
let a = null || 0 || 35;
console.log(a);
//Ответ 35

/* null и 0 не могут быть преобразованы в true, поэтому ответом будет первое значение, возвращающее true, в нашем случае это 35.*/


//6

let a = null && 0 && 35;
console.log(a);
//Ответ null

/* Идентично false && false && true, то есть условие что все значения должны преобразоваться в true не выполняется, поэтому возвращается первое значение, которое может быть преобразовано в false, в нашем случае это null.*/

